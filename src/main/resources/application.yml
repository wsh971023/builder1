spring:
  application:
    name: rhc-builder
  freemarker:
    # 模板后缀名
    suffix: .ftl
    # 页面编码
    charset: UTF-8
    # 页面缓存
    cache: false
    # 模板路径
    template-loader-path: classpath:/templates/
  datasource:
    #url: jdbc:sqlite:db/identifier.sqlite
    url: ${db.url}
    driver-class-name: org.sqlite.JDBC

logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%logger{39} .%M){cyan} %clr([%L{5}]){green} %clr(:){faint} %m%n"
  level:
    root: info
  charset:
    console: ${logEncoding}



name: GraalVM Native Image builds
on: [push, pull_request]
jobs:
  build:
    name: Rhc Builder on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Compile Application to Native Image
        run: |
          ./mvnw -Pnative clean package
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: rhc-builder-${{ matrix.os }}
          path: rhc-builder*